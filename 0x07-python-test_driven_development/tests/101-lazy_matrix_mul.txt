================================
Matrix Multiplication With Numpy
================================
A test file for a function that prints a rectangular matrix
The function takes two parameters of either an int or a float

---------------
Import function
---------------
    >>> matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

-------------------------------
normal condition multiplication
-------------------------------
    >>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
    [[ 7 10]
     [15 22]]

    --------
    Negative
    --------
    >>> print(matrix_mul([[1, -2]], [[-3, 4], [-5, -6]]))
    [[ 7 16]]

    ------
    floats
    ------
    >>> print(matrix_mul([[1.5, 2.4], [3.4, 4.6]], [[1.3, 2.6], [3.4, 4.5]]))
    [[10.11 14.7 ]
     [20.06 29.54]]

    ------------------------------
    floats, integers and negatives
    ------------------------------
    >>> print(matrix_mul([[1.5, -2], [-3.4, 4.6]], [[1, 2.6], [-3, -4.5]]))
    [[  7.5   12.9 ]
     [-17.2  -29.54]]

--------------------
Not List Either Args
--------------------
    >>> print(matrix_mul(7, [[3, 4], [5, 6]]))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> print(matrix_mul([], 7))
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

-------------
List of Lists
-------------
    >>> print(matrix_mul([7], [[3, 4], [5, 6]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,) and (2,2) not aligned: 1 (dim 0) != 2 (dim 0)

    >>> print(matrix_mul([[]], [3, 4]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,0) and (2,) not aligned: 0 (dim 1) != 2 (dim 0)

--------------------
List cannot be Empty
--------------------
    >>> print(matrix_mul([], [[3, 4]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (0,) and (1,2) not aligned: 0 (dim 0) != 1 (dim 0)

    >>> print(matrix_mul([[]], [[3, 4]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,0) and (1,2) not aligned: 0 (dim 1) != 1 (dim 0)

    >>> print(matrix_mul([[5, 4]], []))
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

    >>> print(matrix_mul([[5, 4]], [[]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

-------------------------------
Element not an integer or float
-------------------------------
    >>> print(matrix_mul([["string", 4]], [["string", 4]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

    >>> print(matrix_mul([[5, 4]], [[None, 4]]))
    Traceback (most recent call last):
    ...
    TypeError: Object arrays are not currently supported

--------------------------------
Each row should be the same size
--------------------------------
    >>> print(matrix_mul([[5, 4], [3, 3, 5]], [[5, 4]]))
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

    >>> print(matrix_mul([[5, 4], [3, 5]], [[5, 3, 5], [5, 4]]))
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

----------------------
Cannot Multiply Matrix
----------------------
    >>> print(matrix_mul([[5, 4], [7, 6]], [[5, 6]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

    >>> print(matrix_mul([[5, 4], [7, 6]], [[5, 6], [8, 9], [3, 3]]))
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

-----------------
Pass no arguments
-----------------
    >>> matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

-----------------
Pass one argument
-----------------
    >>> matrix_mul([7])
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'
